@model DTOModels.SignUpDTOModel;

@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <title>Регистрация</title>
    <link rel="stylesheet" href="~/css/complete_style.css">
    <link rel="stylesheet" href="~/css/registration_style.css">
</head>
<body>
    @if (ViewBag.ShowResult != null && ViewBag.ShowResult)
    {
        <main class="main">
            <div class="container">
                <div class="main__inner">
                    <div class="main__text">
                        Спасибо за регистрацию
                    </div>
                    <div class="main__mem">
                        <img src="~/images/mem.jpg" alt="">
                    </div>
                    <div class="main__btn">
                        <a class="red-btn" href="../../">На главную</a>
                    </div>
                </div>
            </div>
        </main>
    }
    else
    {
        <main class="registration">

            <form class="registration__form" action="/Auth/SignUp" method="post">
                <h1 class="registration__title title">Регистрация</h1>

                @if (!String.IsNullOrEmpty(ViewBag.Error))
                {
                    <input class="auth__input input" style="color:red;border-bottom:none;" value="@ViewBag.Error" />
                }

                @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "registration__input input", placeholder = "Введите адрес электронной почты", required = "", type = "email" } })
                @Html.ValidationMessageFor(x => x.Email)

                @Html.EditorFor(x => x.Login, new { htmlAttributes = new { @class = "registration__input input", placeholder = "Задайте логин", required = "", type = "text" } })
                @Html.ValidationMessageFor(x => x.Login)

                @Html.EditorFor(x => x.FirstName, new { htmlAttributes = new { @class = "registration__input input", placeholder = "Введите имя", required = "", type = "text" } })
                @Html.ValidationMessageFor(x => x.FirstName)

                @Html.EditorFor(x => x.LastName, new { htmlAttributes = new { @class = "registration__input input", placeholder = "Введите фамилию", required = "", type = "text" } })
                @Html.ValidationMessageFor(x => x.LastName)

                @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "registration__input input", placeholder = "Задайте пароль", required = "", type = "password" } })
                @Html.ValidationMessageFor(x => x.Password)

                <button type="submit" class="registration__btn red-btn">Зарегистрироваться</button>
            </form>

        </main>
    }
</body>
</html>